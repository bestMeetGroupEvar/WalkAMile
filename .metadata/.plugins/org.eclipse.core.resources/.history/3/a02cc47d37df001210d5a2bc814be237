package com.meet.walkamile;

import java.util.ArrayList;
import java.util.List;

import com.parse.FindCallback;
import com.parse.GetCallback;
import com.parse.ParseException;
import com.parse.ParseObject;
import com.parse.ParseQuery;

import android.location.Location;
import android.location.LocationManager;

public class RouteManager {
	
	ArrayList<Route> loadedRoutes;
	
	public RouteManager() {
		loadedRoutes = new ArrayList<Route>();
	}
	
	public void saveRoute(Route route) {
		ParseObject rot = new ParseObject("Route");
		rot.put("name", route.getName());
		rot.saveInBackground();
		for (Location loc:route.getlocations()) {
		   ParseObject location = new ParseObject("Location");
		   location.put("route", route.getName());
		   location.put("lat", loc.getLatitude());
		   location.put("lon", loc.getLongitude());
		   location.saveInBackground();
		}
	}
	
	public void loadRoutes(int amount,final LocationManager lm) {
		ParseQuery<ParseObject> query = ParseQuery.getQuery("Route");
		query.setLimit(amount);
		query.findInBackground(new FindCallback<ParseObject>() {
			@Override
		    public void done(List<ParseObject> routes, ParseException e) {
				for (int i = 0; i < routes.size(); i++)
					loadedRoutes.add(new Route(null,String.valueOf(routes.get(i).get("name"))));
		    }
		});
		final ArrayList<Location> locs = new ArrayList<Location>();
		for (Route r: loadedRoutes) {
			locs.clear();
			query = ParseQuery.getQuery("Location");
			query.whereEqualTo("route", r.getName());
			query.findInBackground(new FindCallback<ParseObject>() {
				@Override
			    public void done(List<ParseObject> locas, ParseException e) {
					for (int i = 0; i < locas.size(); i++)
						locs.add();
			    }
			});
			r.setlocations(locs);
		}
		
	}

}
